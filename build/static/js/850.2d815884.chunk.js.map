{"version":3,"file":"static/js/850.2d815884.chunk.js","mappings":"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","sources":["components/dataRadar/DataRadar.styles.tsx","components/dataRadar/DataRadar.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const RadialChartContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 2rem;\n  padding: 2rem;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 599px) {\n    height: 500px;\n    margin-top: 0rem;\n    padding: 0;\n  }\n\n  @media (min-width: 600px) and (max-width: 1199px) {\n    height: 600px;\n  }\n\n  @media (min-width: 1200px) {\n    height: 700px;\n  }\n`\n","import { useRef, useEffect, useMemo } from 'react'\r\nimport * as d3 from 'd3'\r\nimport { matchData } from '../../data/matchData'\r\nimport { RadialChartContainer } from './DataRadar.styles'\r\nimport useGameType from '../../hooks/useGameType'\r\nimport debounce from 'lodash/debounce'\r\n\r\nconst DataRadar = () => {\r\n  const ref = useRef<SVGSVGElement>(null)\r\n  const { selectedGameTypes } = useGameType()\r\n\r\n  const maxValues = useMemo(() => {\r\n    return {\r\n      maxAttacks: Math.max(...matchData.map(d => d.attacks)),\r\n      maxDefense: Math.max(...matchData.map(d => d.defense)),\r\n      maxConceded: Math.max(...matchData.map(d => d.conceded)),\r\n      maxScored: Math.max(...matchData.map(d => d.scored)),\r\n      maxCorners: Math.max(...matchData.map(d => d.corners)),\r\n      maxFreeKicks: Math.max(...matchData.map(d => d.freeKicks)),\r\n    }\r\n  }, [])\r\n\r\n  const dataValues = useMemo(() => {\r\n    return matchData.map(d => [\r\n      (d.attacks / maxValues.maxAttacks) * 100,\r\n      (d.defense / maxValues.maxDefense) * 100,\r\n      (d.conceded / maxValues.maxConceded) * 100,\r\n      (d.scored / maxValues.maxScored) * 100,\r\n      (d.corners / maxValues.maxCorners) * 100,\r\n      (d.freeKicks / maxValues.maxFreeKicks) * 100,\r\n      d.possession,\r\n    ])\r\n  }, [maxValues])\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(ref.current)\r\n    const margin = { top: 40, right: 40, bottom: 40, left: 40 }\r\n    const colors = [\r\n      '#0f7fd0',\r\n      '#ff7f0e',\r\n      '#2ca02c',\r\n      '#d62728',\r\n      '#9467bd',\r\n      '#8c564b',\r\n      '#e377c2',\r\n      '#7f7f7f',\r\n      '#dfd000',\r\n      '#17becf',\r\n    ]\r\n\r\n    const resize = debounce(() => {\r\n      const width = (ref.current?.clientWidth || 0) - margin.left - margin.right\r\n      const height = (ref.current?.clientHeight || 0) - margin.top - margin.bottom\r\n      const radius = Math.min(width, height) / 2\r\n      svg.selectAll('*').remove()\r\n\r\n      drawChart(width, height, radius)\r\n    }, 300)\r\n\r\n    const drawChart = (width: number, height: number, radius: number) => {\r\n      const levels = 5\r\n      const angleSlice = (Math.PI * 2) / selectedGameTypes.filter(k => k !== 'Select all').length\r\n      const maxValue = 100\r\n\r\n      const radarLine = d3\r\n        .lineRadial<number>()\r\n        .curve(d3.curveLinearClosed)\r\n        .radius(d => radiusScale(d))\r\n        .angle((d, i) => i * angleSlice)\r\n\r\n      const radiusScale = d3.scaleLinear().range([0, radius]).domain([0, maxValue])\r\n\r\n      svg\r\n        .attr('width', width + margin.left + margin.right)\r\n        .attr('height', height + margin.top + margin.bottom)\r\n\r\n      const g = svg\r\n        .append('g')\r\n        .attr(\r\n          'transform',\r\n          `translate(${(width + margin.left + margin.right) / 2},${\r\n            (height + margin.top + margin.bottom) / 2\r\n          })`,\r\n        )\r\n\r\n      // Grid\r\n      for (let i = 0; i <= levels; i++) {\r\n        const levelFactor = radiusScale((maxValue * i) / levels)\r\n        g.selectAll(`.levels-${i}`)\r\n          .data([1])\r\n          .enter()\r\n          .append('circle')\r\n          .attr('r', levelFactor)\r\n          .attr('cx', 0)\r\n          .attr('cy', 0)\r\n          .style('fill', 'none')\r\n          .style('stroke', '#CDCDCD')\r\n          .style('stroke-width', '0.5px')\r\n      }\r\n\r\n      const axis = g\r\n        .selectAll('.axis')\r\n        .data(selectedGameTypes.filter(key => key !== 'Select all'))\r\n        .enter()\r\n        .append('g')\r\n        .attr('class', 'axis')\r\n\r\n      axis\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', 0)\r\n        .attr('x2', (d, i) => radiusScale(maxValue) * Math.cos(angleSlice * i - Math.PI / 2))\r\n        .attr('y2', (d, i) => radiusScale(maxValue) * Math.sin(angleSlice * i - Math.PI / 2))\r\n        .style('stroke', 'grey')\r\n        .style('stroke-width', '1px')\r\n\r\n      axis\r\n        .append('text')\r\n        .attr('class', 'legend')\r\n        .text(d => d)\r\n        .style('font-size', '11px')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dy', '0.35em')\r\n        .attr('x', (d, i) => radiusScale(maxValue * 1.1) * Math.cos(angleSlice * i - Math.PI / 2))\r\n        .attr('y', (d, i) => radiusScale(maxValue * 1.1) * Math.sin(angleSlice * i - Math.PI / 2))\r\n\r\n      // Draw data\r\n      dataValues.forEach((dataSet, index) => {\r\n        g.append('path')\r\n          .datum(dataSet)\r\n          .attr('class', 'radarStroke')\r\n          .attr('d', radarLine)\r\n          .style('stroke-width', '2px')\r\n          .style('stroke', colors[index % colors.length])\r\n          .style('fill', 'none')\r\n\r\n        g.selectAll(`.radarCircle-${index}`)\r\n          .data(dataSet)\r\n          .enter()\r\n          .append('circle')\r\n          .attr('r', 4)\r\n          .attr('cx', (d, i) => radiusScale(d) * Math.cos(angleSlice * i - Math.PI / 2))\r\n          .attr('cy', (d, i) => radiusScale(d) * Math.sin(angleSlice * i - Math.PI / 2))\r\n          .style('fill', colors[index % colors.length])\r\n          .style('fill-opacity', 0.8)\r\n      })\r\n    }\r\n\r\n    // Initial draw\r\n    resize()\r\n    window.addEventListener('resize', resize)\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resize)\r\n    }\r\n  }, [selectedGameTypes, dataValues])\r\n\r\n  return (\r\n    <RadialChartContainer>\r\n      <svg ref={ref}></svg>\r\n    </RadialChartContainer>\r\n  )\r\n}\r\n\r\nexport default DataRadar\r\n\r\n"],"names":["RadialChartContainer","styled","div","_templateObject","_taggedTemplateLiteral","DataRadar","ref","useRef","selectedGameTypes","useGameType","maxValues","useMemo","maxAttacks","Math","max","matchData","map","d","attacks","maxDefense","defense","maxConceded","conceded","maxScored","scored","maxCorners","corners","maxFreeKicks","freeKicks","dataValues","possession","useEffect","svg","d3","current","margin","colors","resize","debounce","_ref$current","_ref$current2","width","clientWidth","height","clientHeight","radius","min","selectAll","remove","drawChart","angleSlice","PI","filter","k","length","maxValue","radarLine","curve","radiusScale","angle","i","range","domain","attr","g","append","concat","levelFactor","data","enter","style","axis","key","cos","sin","text","forEach","dataSet","index","datum","window","addEventListener","removeEventListener","_jsx","children"],"sourceRoot":""}